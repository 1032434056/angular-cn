block includes
  include ../_util-fns

figure
  img(src="/resources/images/devguide/intro/people.png" width="200px" height="152px" alt="Us" align="left" style="margin-left:-40px;margin-right:10px" )
:marked
  Everyone learns differently.
  You don't have to read the documentation straight through.  Most pages stand on their own.
  Those new to Angular may wish to follow this popular learning path.
  <br class="l-clear-left">

  每个人的学习方式不一样。
  你不一定要通读文档。本站大部分页面都是独立的。
  Angular 初学者可能希望跟随下面流行的学习路径。
  <br class="l-clear-left">

  1. [Setup](setup.html "Setup locally withe Quickstart seed") for local Angular development, if you haven't already done so.

    如果你还没有这样做，[搭建](setup.html  "利用《快速起步》种子搭建本地开发环境")本地 Angular 开发环境。

  1. Take the [*Tour of Heroes* tutorial](../tutorial "Tour of Heroes").

    学习[*英雄指南*教程](../tutorial "Tour of Heroes")。
  
    The *Tour of Heroes* takes you step-by-step from [setup](setup.html)
    to a full-featured example that demonstrates the essential characteristics of a professional application:
    a sensible project structure, data binding, master/detail, services, dependency injection, navigation, and remote data access.

    *英雄指南*让你一步一步的从[搭建本地开发环境](setup.html)开始，到开发一个完整特征的例子程序，它包含了专业应用最基本的特征：
    合理的项目结构、数据绑定、主从视图、服务、依赖注入、导航和远程数据访问等。

  1. <a id="architecture"></a>Read the [Architecture](architecture.html) overview for the big picture.

    <a id="architecture"></a>阅读[架构](architecture.html)了解大局。

  1. [The Root Module](appmodule.html) introduces the `NgModule` class that tells Angular how to compile and run your application.

    [根模块](appmodule.html)介绍了`NgModule`类，它为 Angular 描述如何编译和运行应用。   

  1. [Displaying Data](displaying-data.html) shows how data binding puts component property values on screen.

    [显示数据](displaying-data.html)展示了数据绑定如何将组件属性值显示到屏幕上。

  1. [User Input](user-input.html) explains how to respond to user-initiated DOM events.
   
   [用户输入](user-input.html)解释了如何处理用户触发的DOM事件。

  1. [Forms](forms.html) covers data entry and validation within the UI.

   [表单](forms.html)涵盖了 UI 界面中数据的输入和验证。

  1. [Dependency Injection](dependency-injection.html) is the way to build large, maintainable applications
  from small, single-purpose parts.
   
   [依赖注入](dependency-injection.html)是用小型和单用途部件来构建大型、易维护应用的途径。

  1. [Template Syntax](template-syntax.html) is a comprehensive study of Angular template HTML.

   [模板语法](template-syntax.html)对 Angular 模板HTML进行了完整的阐述。

  After reading the above sections, feel free to skip around among the other pages on this site.

  阅读上面这些页面以后，你可以随意在本站的其他页面中挑选阅读。

.l-sub-section
  :marked
    ### Next Step

    ### 下一步

    Try the [tutorial](../tutorial "Tour of Heroes") if you're ready to start coding or 
    visit the [Architecture](architecture.html "Basic Concepts") page if you prefer to learn the basic concepts first.

    如果你想开始编程，那就试试[教程](../tutorial "Tour of Heroes")。或者如果你想要先学习基础概念，那么阅读[架构](architecture.html "基本概念")页面。
